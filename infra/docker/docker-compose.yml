# Description : docker-compose.yml - üìå ÎèÑÏª§ Ïª¥Ìè¨Ï¶à ÏÑ§Ï†ï ÌååÏùº
# Author      : Shiwoo Min
# Date        : 2025-09-06

version: '3.8'
# Ïª®ÌÖåÏù¥ÎÑà Ïò¨Î¶¨Í∏∞: docker compose up -d
# ÎπåÎìú Ï∫êÏãú Ï†ïÎ¶¨: docker compose build --no-cache
# Ï¥àÍ∏∞ÎπåÎìú: docker compose build --no-cache --progress=plain
# Î£®Ìä∏ÏóêÏÑú ÎπåÎìú: docker compose -f infra/docker/docker-compose.yml build --no-cache
# Docker ÎπåÎìú Ï∫êÏãú ÏôÑÏ†Ñ Ï†úÍ±∞: docker builder prune -af

services:
  # Next.js (Ïõπ ÌîÑÎ°†Ìä∏ÏóîÎìú)
  web:
    build:
      context: ../../
      dockerfile: ./infra/docker/Dockerfile.web
    container_name: web:latest
    environment:
      - NODE_ENV=production
      - PORT=3000
    expose:
      - "3000"
    # DockerfileÏùò CMD ÏÇ¨Ïö© (command Ï†úÍ±∞)
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 10s
      timeout: 3s
      retries: 10

  # Express.js API (Î∞±ÏóîÎìú)
  api:
    build:
      context: ../../
      dockerfile: ./infra/docker/Dockerfile.api
    container_name: api:latest
    environment:
      - NODE_ENV=production
      - PORT=8000
    expose:
      - "8000"
    # DockerfileÏùò CMD ÏÇ¨Ïö© (command Ï†úÍ±∞)
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 10

  # Nginx Î¶¨Î≤ÑÏä§ ÌîÑÎ°ùÏãú
  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      web:
        condition: service_healthy
      api:
        condition: service_healthy

  # PostgreSQL
  postgres:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.db
    image: postgres:17
    container_name: postgres
    env_file: [../../.env]
    ports:
      - "5432:5432"
    command: >
      postgres -c config_file=/etc/postgresql/postgresql.conf
              -c hba_file=/etc/postgresql/pg_hba.conf
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis (Ï∫êÏãú/ÏÑ∏ÏÖò Ïä§ÌÜ†Ïñ¥)
  redis:
    image: redis:7-alpine
    container_name: redis
    env_file: [../../.env]
    ports:
      - "6379:6379"
    command: >
      sh -c 'exec redis-server
        --appendonly yes
        --appendfsync everysec
        --requirepass "$$REDIS_PASSWORD"
        --maxmemory "${REDIS_MAXMEMORY:-512mb}"
        --maxmemory-policy "${REDIS_EVICTION:-allkeys-lru}"'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 10

  # RedisInsight (Î™®ÎãàÌÑ∞ÎßÅ UI)
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - redisinsight:/data

volumes:
  pg_data:
  redis_data:
  redisinsight:
