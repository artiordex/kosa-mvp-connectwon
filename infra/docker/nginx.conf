# /etc/nginx/nginx.conf 로 복사/마운트해서 사용
user  nginx;
worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
  keepalive_timeout 65;
  server_tokens off;

  # WebSocket 업그레이드 헬퍼
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # 압축 (브라우저가 지원 시)
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_vary on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;

  # (선택) brotli 모듈이 있는 이미지면 주석 해제
  # brotli on;
  # brotli_comp_level 5;
  # brotli_types text/plain text/css application/json application/javascript application/xml image/svg+xml;

  # Docker compose 서비스명을 그대로 upstream 호스트로 사용
  upstream web {  server web:3000; }   # Next.js
  upstream api {  server api:8080; }   # API (Node/Spring 등 실제 포트로 수정)

  server {
    listen 80;
    server_name _;   # 운영에선 your.domain 으로 교체
    client_max_body_size 20m;

    # --- 헬스 체크 ---
    location = /health {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    # --- API 먼저 매칭 (/api -> api 서비스) ---
    location /api/ {
      proxy_pass http://api/;     # 슬래시 유지: /api/foo -> /api/foo
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Upgrade $http_upgrade;   # WebSocket/SSE
      proxy_read_timeout 75s;
    }

    # --- Next.js 정적자산 강캐시 ---
    location ~* ^/_next/static/ {
      proxy_pass http://web;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }
    location ~* ^/(assets|static)/ {
      proxy_pass http://web;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";
    }

    # --- Next.js SSR/라우팅 (웹소켓 포함) ---
    location / {
      proxy_pass http://web;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Upgrade $http_upgrade;   # Hot reload/WS
      proxy_read_timeout 75s;
    }

    # (선택) 공통 보안 헤더 (HTTPS에서 특히 유효)
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # HTTPS에서만
  }
}
